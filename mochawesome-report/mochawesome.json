{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-07T06:29:42.248Z",
    "end": "2025-08-07T06:30:02.919Z",
    "duration": 20671,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4c9e2d3e-b421-48db-af46-770a46b48616",
      "title": "",
      "fullFile": "C:\\Users\\ASUS VIVOBOOK\\Downloads\\Tugas Sesi11\\test\\sesi-11\\test_sesi11.js",
      "file": "\\test\\sesi-11\\test_sesi11.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
          "title": "Test Tugas Sesi ke 11",
          "fullFile": "C:\\Users\\ASUS VIVOBOOK\\Downloads\\Tugas Sesi11\\test\\sesi-11\\test_sesi11.js",
          "file": "\\test\\sesi-11\\test_sesi11.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Test Tugas Sesi ke 11\"",
              "fullTitle": "Test Tugas Sesi ke 11 \"before all\" hook in \"Test Tugas Sesi ke 11\"",
              "timedOut": false,
              "duration": 9488,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Bersiap menjalankan test Sesi 11 dengan Login SauceDemo');\n\n// maximize browser window\nlet options = new chrome.Options();\noptions.addArguments('--start-maximized');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .build();\nawait driver.get('https://www.saucedemo.com');\nconst title = await driver.getTitle();\n// assert: memastikan object sama persis\nassert.strictEqual(title, 'Swag Labs');\n//   |\n//   v\n\n// inputs\nlet pageLogin = new PageLogin(driver);\nawait pageLogin.login('standard_user', 'secret_sauce');\n// jeda sebelum test case berikutnya\nawait driver.sleep(2000);",
              "err": {},
              "uuid": "99cabf96-bebe-485e-b3f2-9a49d7eee67b",
              "parentUUID": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Test Tugas Sesi ke 11\"",
              "fullTitle": "Test Tugas Sesi ke 11 \"before each\" hook in \"Test Tugas Sesi ke 11\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Menjalankan test Sesi 11 case: '+ this.currentTest.title);",
              "err": {},
              "uuid": "2a8ae598-1f98-45f2-b67e-d078eed02028",
              "parentUUID": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Test Tugas Sesi ke 11\"",
              "fullTitle": "Test Tugas Sesi ke 11 \"after all\" hook in \"Test Tugas Sesi ke 11\"",
              "timedOut": false,
              "duration": 2139,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Test Sesi 11 selesai, menutup browser');\nawait driver.sleep(2000);\nawait driver.quit();",
              "err": {},
              "uuid": "a7656e2e-beee-4f3f-8853-3c52988c0c3e",
              "parentUUID": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Test Tugas Sesi ke 11\"",
              "fullTitle": "Test Tugas Sesi ke 11 \"after each\" hook in \"Test Tugas Sesi ke 11\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Selesai mejalankan case: '+ this.currentTest.title);",
              "err": {},
              "uuid": "c3551026-e8f8-4f1a-8d3c-f73ae4ee8ae9",
              "parentUUID": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Test SauceDemo login success dengan Full Screenshoot",
              "fullTitle": "Test Tugas Sesi ke 11 Test SauceDemo login success dengan Full Screenshoot",
              "timedOut": false,
              "duration": 2138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// full screenshot\nlet ss_full = await driver.takeScreenshot();\nfs.writeFileSync(\"full_screenshot_sucess_login_page.png\", Buffer.from(ss_full, \"base64\"));\nawait driver.sleep(2000);\n// partial screenshot\n// let inputUsernamePOM = await driver.findElement(page_login.inputUsername)\n// let ss_inputusername = await inputUsernamePOM.takeScreenshot();\n// fs.writeFileSync(\"inputusername.png\", Buffer.from(ss_inputusername, \"base64\"));",
              "err": {},
              "uuid": "e050e748-05d0-474d-a6a3-733fc5a98196",
              "parentUUID": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test SauceDemo -> login success -> change a-z to z-a",
              "fullTitle": "Test Tugas Sesi ke 11 Test SauceDemo -> login success -> change a-z to z-a",
              "timedOut": false,
              "duration": 2188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// tunggu element tampil\n        let buttonCart = await driver.wait(\n            until.elementLocated(By.xpath('//*[@data-test=\"shopping-cart-link\"]')), \n            10000\n        );\n        await driver.wait(until.elementIsVisible(buttonCart), 5000, 'Shopping cart harus tampil');\n        \n        // assert: elememt ada\n        await buttonCart.isDisplayed()\n        // assert: text dalam element benar\n        let textAppLogo = await driver.findElement(By.className('app_logo'))\n        let logotext = await textAppLogo.getText()\n        assert.equal(logotext, 'Swag Labs')\n        //   |\n        //   v\n        // assert: dropdown search\n        let dropdownSort = await driver.findElement(By.xpath('//*[@data-test=\"product-sort-container\"]'));\n        await dropdownSort.click()     \n        // az = dari a ke z\n        // za = dari z ke a\n        // lohi = dari harga rendah ke tinggi\n        // hilo = dari harga tinggi ke rendah  \n        let option = await driver.findElement(By.xpath('//*[@value=\"za\"]'));\n        await option.click();\n        \n        // jeda sebelum quitting driver\n        await driver.sleep(2000);",
              "err": {},
              "uuid": "5347f3c8-c0a1-4af8-b831-320e0977e1c6",
              "parentUUID": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test SauceDemo -> login success -> change a-z to low - high",
              "fullTitle": "Test Tugas Sesi ke 11 Test SauceDemo -> login success -> change a-z to low - high",
              "timedOut": false,
              "duration": 2160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// tunggu element tampil\n        let buttonCart = await driver.wait(\n            until.elementLocated(By.xpath('//*[@data-test=\"shopping-cart-link\"]')), \n            10000\n        );\n        await driver.wait(until.elementIsVisible(buttonCart), 5000, 'Shopping cart harus tampil');\n        \n        // assert: elememt ada\n        await buttonCart.isDisplayed()\n        // assert: text dalam element benar\n        let textAppLogo = await driver.findElement(By.className('app_logo'))\n        let logotext = await textAppLogo.getText()\n        assert.equal(logotext, 'Swag Labs')\n        //   |\n        //   v\n        // assert: dropdown search\n        let dropdownSort = await driver.findElement(By.xpath('//*[@data-test=\"product-sort-container\"]'));\n        await dropdownSort.click()     \n        // az = dari a ke z\n        // za = dari z ke a\n        // lohi = dari harga rendah ke tinggi\n        // hilo = dari harga tinggi ke rendah  \n        let option = await driver.findElement(By.xpath('//*[@value=\"lohi\"]'));\n        await option.click();\n        \n        // jeda sebelum quitting driver\n        await driver.sleep(2000);",
              "err": {},
              "uuid": "30b783c8-edf0-46d7-999a-8b7199b6da44",
              "parentUUID": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test SauceDemo -> login success -> change a-z to high - low",
              "fullTitle": "Test Tugas Sesi ke 11 Test SauceDemo -> login success -> change a-z to high - low",
              "timedOut": false,
              "duration": 2139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// tunggu element tampil\n        let buttonCart = await driver.wait(\n            until.elementLocated(By.xpath('//*[@data-test=\"shopping-cart-link\"]')), \n            10000\n        );\n        await driver.wait(until.elementIsVisible(buttonCart), 5000, 'Shopping cart harus tampil');\n        \n        // assert: elememt ada\n        await buttonCart.isDisplayed()\n        // assert: text dalam element benar\n        let textAppLogo = await driver.findElement(By.className('app_logo'))\n        let logotext = await textAppLogo.getText()\n        assert.equal(logotext, 'Swag Labs')\n        //   |\n        //   v\n        // assert: dropdown search\n        let dropdownSort = await driver.findElement(By.xpath('//*[@data-test=\"product-sort-container\"]'));\n        await dropdownSort.click()     \n        // az = dari a ke z\n        // za = dari z ke a\n        // lohi = dari harga rendah ke tinggi\n        // hilo = dari harga tinggi ke rendah  \n        let option = await driver.findElement(By.xpath('//*[@value=\"hilo\"]'));\n        await option.click();\n        \n        // jeda sebelum quitting driver\n        await driver.sleep(2000);",
              "err": {},
              "uuid": "dc0ca78c-9a14-4212-9636-4e87a8b6a3ae",
              "parentUUID": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Visual Testing compare img",
              "fullTitle": "Test Tugas Sesi ke 11 Test Visual Testing compare img",
              "timedOut": false,
              "duration": 391,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver \n// screenshot keadaan login page sekarang, current.png\nlet screenshot = await driver.takeScreenshot();\nlet imgBuffer = Buffer.from(screenshot, \"base64\");\nfs.writeFileSync(\"current.png\", imgBuffer);\n// ambil baseline untuk komparasi\n// jika belum ada baseline, jadikan current.png sebagai baseline\nif (!fs.existsSync(\"baseline.png\")) {\n    fs.copyFileSync(\"current.png\", \"baseline.png\");\n    console.log(\"Baseline image saved.\");\n}\n// Compare baseline.png dan current.png apakah sama\nlet img1 = PNG.sync.read(fs.readFileSync(\"baseline.png\"));\nlet img2 = PNG.sync.read(fs.readFileSync(\"current.png\"));\nlet { width, height } = img1;\nlet diff = new PNG({ width, height });\nlet numDiffPixels = pixelmatch(img1.data, img2.data, diff.data, width, height, { threshold: 0.1 });\nfs.writeFileSync(\"diff.png\", PNG.sync.write(diff));\nif (numDiffPixels > 0) {\n    console.log(`Visual differences found! Pixels different: ${numDiffPixels}`);\n} else {\n    console.log(\"No visual differences found.\");\n}",
              "err": {},
              "uuid": "0b875bde-44a3-4377-8156-1296ce70b4ea",
              "parentUUID": "6ef45d46-6e30-4406-98a2-4f1ed850a429",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e050e748-05d0-474d-a6a3-733fc5a98196",
            "5347f3c8-c0a1-4af8-b831-320e0977e1c6",
            "30b783c8-edf0-46d7-999a-8b7199b6da44",
            "dc0ca78c-9a14-4212-9636-4e87a8b6a3ae",
            "0b875bde-44a3-4377-8156-1296ce70b4ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9016,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}